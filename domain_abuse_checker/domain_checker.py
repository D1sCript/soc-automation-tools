import requests
import csv
import os
import sys
from datetime import datetime
import socket

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_KEY = "Your API KEY"
INPUT_FILE = path_to_file_with_domain  # –§–∞–π–ª —Å –¥–æ–º–µ–Ω–∞–º–∏

# –°–æ–∑–¥–∞–µ–º –∏–º—è –¥–ª—è —Ñ–∞–π–ª–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
input_directory = os.path.dirname(INPUT_FILE)
output_filename = f"abuseipdb_domains_results_{datetime.now().strftime('%Y-%m-%d_%H-%M')}.csv"
OUTPUT_FILE = os.path.join(input_directory, output_filename)

def get_ip_from_domain(domain):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IP-–∞–¥—Ä–µ—Å–∞ –∏–∑ –¥–æ–º–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏"""
    try:
        ip = socket.gethostbyname(domain)
        return ip
    except socket.gaierror:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ–º–µ–Ω {domain}")
        return None

def check_ip(ip_address):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–¥–Ω–æ–≥–æ IP-–∞–¥—Ä–µ—Å–∞ —á–µ—Ä–µ–∑ AbuseIPDB API"""
    url = 'https://api.abuseipdb.com/api/v2/check'
    
    headers = {
        'Accept': 'application/json',
        'Key': API_KEY
    }
    
    querystring = {
        'ipAddress': ip_address,
        'maxAgeInDays': '90'
    }

    try:
        response = requests.request(method='GET', url=url, headers=headers, params=querystring)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.HTTPError as err:
        print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {err}")
    except Exception as err:
        print(f"   ‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {err}")
    return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ß–∏—Ç–∞–µ–º –¥–æ–º–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞
    try:
        with open(INPUT_FILE, 'r', encoding='utf-8') as file:
            domain_list = [line.strip() for line in file if line.strip()]
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {INPUT_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {len(domain_list)} –¥–æ–º–µ–Ω–æ–≤...")
    print("=" * 70)

    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ CSV —Ñ–∞–π–ª
    with open(OUTPUT_FILE, 'w', newline='', encoding='utf-8') as csvfile:
        writer = csv.writer(csvfile)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        writer.writerow(["Domain", "IP Address", "Abuse Confidence Score"])
        
        for domain in domain_list:
            print(f"üåê –ê–Ω–∞–ª–∏–∑ –¥–æ–º–µ–Ω–∞: {domain}")
            
            # –ü–æ–ª—É—á–∞–µ–º IP –∏–∑ –¥–æ–º–µ–Ω–∞
            ip_address = get_ip_from_domain(domain)
            
            if ip_address is None:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP-–∞–¥—Ä–µ—Å\n")
                writer.writerow([domain, "Resolution Error", "N/A"])
                print("-" * 50)
                continue
                
            print(f"   üì° IP-–∞–¥—Ä–µ—Å: {ip_address}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP —á–µ—Ä–µ–∑ AbuseIPDB
            result = check_ip(ip_address)
            
            if result is None:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç AbuseIPDB\n")
                writer.writerow([domain, ip_address, "API Error"])
                print("-" * 50)
                continue

            data = result.get('data', {})
            abuse_score = data.get('abuseConfidenceScore', 0)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ CSV
            writer.writerow([domain, ip_address, f"Abuse score {abuse_score}%"])
            
            # –î–ï–¢–ê–õ–¨–ù–´–ô –í–´–í–û–î –ù–ê –≠–ö–†–ê–ù
            country = data.get('countryCode', 'N/A')
            usage_type = data.get('usageType', 'N/A')
            isp = data.get('isp', 'N/A')
            total_reports = data.get('totalReports', 0)
            is_whitelisted = data.get('isWhitelisted', False)
            last_reported = data.get('lastReportedAt', 'N/A')
            
            print(f"   ‚úÖ –£—Ä–æ–≤–µ–Ω—å —É–≥—Ä–æ–∑—ã: {abuse_score}%")
            print(f"   üåç –°—Ç—Ä–∞–Ω–∞: {country}")
            print(f"   üíº –¢–∏–ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {usage_type}")
            print(f"   üì° –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {isp}")
            print(f"   üìä –í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤: {total_reports}")
            print(f"   üõ°Ô∏è  –í –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ: {is_whitelisted}")
            print(f"   ‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç: {last_reported}")
            print("-" * 50)
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –±—É—Ñ–µ—Ä –≤—ã–≤–æ–¥–∞
            sys.stdout.flush()

    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {OUTPUT_FILE}")
    print("\n" + "=" * 70)
    input("üéØ –ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –≤—ã–π—Ç–∏...")

if __name__ == "__main__":
    main()
